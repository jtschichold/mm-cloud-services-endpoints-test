name: Mine

on:
  push:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: '5 3,15 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      # mine
      - name: mine O365
        uses: jtschichold/mm-cloud-services-miners@50e3bb4
        with:
          config: ./cs-mining-config.yml
          configSection: o365
      - name: mine Azure
        uses: jtschichold/mm-cloud-services-miners@50e3bb4
        with:
          config: ./cs-mining-config.yml
          configSection: azure
      - name: mine AWS
        uses: jtschichold/mm-cloud-services-miners@50e3bb4
        with:
          config: ./cs-mining-config.yml
          configSection: aws
      - name: mine Adobe
        uses: jtschichold/mm-cloud-services-miners@50e3bb4
        with:
          config: ./cs-mining-config.yml
          configSection: adobe
      - name: mine Google
        uses: jtschichold/mm-cloud-services-miners@50e3bb4
        with:
          config: ./cs-mining-config.yml
          configSection: google
      - name: mine Facebook
        uses: jtschichold/mm-cloud-services-miners@50e3bb4
        with:
          config: ./cs-mining-config.yml
          configSection: facebook
      # processing
      - name: Process IP lists
        uses: jtschichold/mm-process-ip-list@301234354e
        with:
          list: ./**/*-ips.txt
          filterInPlace: true
          filterReservedIPs: true
          filter: ./ip-exclusion-list
      - name: Process URL lists
        uses: jtschichold/mm-process-url-list@be420d4684
        with:
          list: ./**/*-urls.txt
          inPlace: true
          outFormat: PANOSURL
          filter: ./url-exclusion-list
      # validation
      - name: git add
        run: |-
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git status
          git add -A
      - name: Check changes
        id: check_changes
        uses: jtschichold/mm-check-changes@fef08ed6dd
        with:
          includeGlob: ./**/*.txt
      - name: Print Check Result
        run: echo "${{ steps.check_changes.outputs.bigChange }}"
      - name: Commit
        run: |-
          git status
          timestamp=$(date -u)
          git commit -m "Latest data: ${timestamp}" || exit 0
      - name: Push
        if: steps.check_changes.outputs.bigChange != 'true'
        run: |-
          git push
      - name: Create PR
        if: steps.check_changes.outputs.bigChange == 'true'
        uses: peter-evans/create-pull-request@45c510e
        with:
          branch: please-check-changes
